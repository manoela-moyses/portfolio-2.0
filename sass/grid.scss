//Grid's variables
$columns: 12;
$gutter: 2rem;
$i-device: 1440px;
$l-device: 1280px;
$m-device: 768px;
$s-device: 375px;

//Box-sizing
*,
*::after,
*::before {
  box-sizing: border-box;
}

//Media-queries' mixin
@mixin d($size) {
  @if $size == large {
    @media only screen and (min-width: $l-device) {
      @content;
    }
  } @else if $size == inter {
    @media screen and (min-width: $l-device) and (max-width: ($i-device - 1)) {
      @content;
    }
  } @else if $size == medium {
    @media screen and (min-width: $m-device) and (max-width: ($l-device - 1)) {
      @content;
    }
  } @else if $size == small {
    @media screen and (max-width: ($m-device - 1)) {
      @content;
    }
  } @else if $size == x-small {
    @media screen and (max-width: ($s-device - 1)) {
      @content;
    }
  }
}

// Grid's function
@function grid($column, $offset: false) {
  $width: $column / $columns * 100 + "%";
  $result: calc(#{$width} - #{$gutter});
  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }
  @return $result;
}

//Generate grid's classes
@for $i from 1 through $columns {
  .grid-#{$i} {
    width: grid($i);
  }
}

//Mixin grid's structure
@mixin grid-structure {
  float: left;
  min-height: 0.1rem;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
  @include d(small) {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^="grid-"] {
  @include grid-structure;
}

//Generate offset's classes
@for $i from 1 through $columns {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset;
  }
}

@include d(small) {
  %offset {
    margin-left: 0;
  }
}

//Mixin clearfix
@mixin clearfix {
  &::before,
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0 auto;
  position: relative;
  @include d(medium) {
    max-width: $m-device;
  }
  @include d(small) {
    max-width: $s-device;
    padding-left: 10px;
    padding-right: 10px;
  }
  @include clearfix;
}

.container {
  @include container;
}

@mixin row {
  position: relative;
  margin-left: -$gutter / 2;
  margin-right: -$gutter / 2;
  @include d(small) {
    margin-left: 0;
    margin-right: 0;
  }
  @include clearfix;
}

.row {
  @include row;
}
